[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Utiliser R avec Quarto",
    "section": "",
    "text": "Bienvenue\nUtiliser R avec Quarto. Une introduction est une brève introduction à l’utilisation de Quarto avec R. Ce livre présente la démarche à suivre afin de bien maîtriser l’application RStudio de la compagnie POSIT comme interface pour communiquer avec R.",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "index.html#copier-les-codes",
    "href": "index.html#copier-les-codes",
    "title": "Utiliser R avec Quarto",
    "section": "Copier les codes",
    "text": "Copier les codes\nDans le présent livre, les codes R sont présentés à l’intérieur d’un bloc de codes sur fond gris. Pour copier toutes les lignes d’un bloc, il suffit de déplacer votre curseur par-dessus le bloc de codes pour voir apparaître le symbole copier dans le coin supérieur droit et de cliquer sur ce dernier. Par la suite, vous pouvez les insérer (coller) dans votre propres scripts R en appuyant sur Ctrl + C (PC) ou Cmd + C (Mac).",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "index.html#comment-exécuter-une-ligne-de-codes-r",
    "href": "index.html#comment-exécuter-une-ligne-de-codes-r",
    "title": "Utiliser R avec Quarto",
    "section": "Comment exécuter une ligne de codes R",
    "text": "Comment exécuter une ligne de codes R\nDans R (et RStudio), une fois que la rédaction de la ligne de codes est complétée, il faut l’exécuter. Bien que RStudio offre de multiples possibilités à cet égard, selon moi, l’option la plus simple consiste à placer le curseur de l’ordinateur sur la ligne de codes que nous voulons exécuter et d’appuyer sur les touches Ctrl + Enter (PC) ou Cmd + Enter (Mac).\n\nL’utilisation de ces deux touches fonctionne pour tous les types de documents produits avec RStudio (script R, documents Quarto, R Notebook ou R Markdown). Bref, mémorisez bien ces deux touches selon le type de système d’exploitation utilisé par votre ordinateur. Vous aurez à les utiliser très régulièrement.",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "index.html#exercices",
    "href": "index.html#exercices",
    "title": "Utiliser R avec Quarto",
    "section": "Exercices",
    "text": "Exercices\nPlusieurs des chapitres se terminent par une série d’exercices qui permettent d’intégrer le contenu du chapitre. N’hésitez pas à vous mettre au défit.",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Utiliser R avec Quarto",
    "section": "License",
    "text": "License\nCe document est gratuit (et il le sera toujours). Il est disponible sous la licence Creative Commons Attribution-NonCommercial-NoDerivs 4.01.",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "index.html#mot-de-la-fin",
    "href": "index.html#mot-de-la-fin",
    "title": "Utiliser R avec Quarto",
    "section": "Mot de la fin",
    "text": "Mot de la fin\nBonne lecture et bon apprentissage,\nSylvain\nSylvain Fiset, Ph.D.2 Professeur titulaire de psychologie Université de Moncton, campus d’Edmundston.",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Utiliser R avec Quarto",
    "section": "",
    "text": "Cliquez sur ce lien pour accéder à la description de cette licence.↩︎\nCliquez sur ce lien pour accéder au site web du professeur Fiset à l’Université de Moncton.↩︎",
    "crumbs": [
      "Bienvenue"
    ]
  },
  {
    "objectID": "preface.html",
    "href": "preface.html",
    "title": "Préface",
    "section": "",
    "text": "Pendant de nombreuses années, les étudiants qui suivaient mon cours Introduction à la statistique appliquée en psychologie (ou sous différentes appellations) avaient comme consigne de rédiger leurs travaux à la main. Ils devaient donc transcrire de nombreuses formules, plus complexes les unes que les autres, et utiliser des tables statistiques pour tirer leurs conclusions. L’utilisation du logiciel SPSS de IBM me satisfaisait pleinement comme complément à la compréhension de la matière. En plus de calculer à la main les différents tests statistiques, mes étudiants devaient vérifier, à l’aide de SPSS, si leurs calculs s’avéraient exacts (vérification qu’ils ne faisaient pas toujours, par manque de temps, me disait-on…).\nLors d’un récent congé sabbatique (l’un des privilèges associés au fait d’être professeur régulier au niveau universitaire…), je me suis inscrit à une formation de cinq jours offerte par John Kruschke, professeur de psychologie à l’Université de l’Indiana à Bloomington, sur les analyses bayésiennes. L’occasion de suivre une formation par l’un des maîtres incontestés des analyses bayésiennes m’enchantait. Par contre, la formation offerte par John Kruschke avait un prérequis obligatoire très important, soit celui d’être en mesure d’utiliser un logiciel qui m’était complètement inconnu à l’époque : R. N’ayant à ma disposition que le livre de John Kruschke Doing Bayesian Data Analysis: A tutorial with R, JAGS, and Stan (et internet) pour apprendre R, je me suis lancé dans l’apprentissage autodidacte de ce logiciel. Oh, quelle aventure ! Il ne me restait que quelques mois entre mon inscription et cette formation. Avec l’enseignement de mes cours et la poursuite de mes travaux de recherche, le temps s’est écoulé très rapidement… Bien honnêtement, et malgré tous mes efforts, ma compréhension de R n’était pas à la hauteur de mes attentes lorsque j’ai finalement mis les pieds à Albuquerque, Nouveau-Mexique, dans la petite salle que je partageais avec John Kruschke et 15 autres personnes.\nFort heureusement, John Kruschke est un formateur exceptionnel et mes connaissances limitées de R ne m’ont pas empêchées d’apprendre à un rythme époustouflant les rudiments de base (et avancés) des analyses bayésiennes. Cette formation a changé mon congé sabbatique de façon radicale. En effet, le reste de mon année sabbatique fut consacré à approfondir ma compréhension de R et des analyses bayésiennes, tout en continuant de suivre de nombreuses formations en statistiques avancées. Au fond de moi, à mon retour de sabbatique, je jalousais le désir de substituer le logiciel SPSS par R pour l’enseignement de mon cours de statistiques. Ne vous méprenez pas. À l’époque, SPSS rencontrait parfaitement mes besoins. Avec une aisance déconcertante, mes étudiants apprenaient rapidement à insérer leurs données dans le chiffrier intégré de SPSS et à produire leurs analyses statistiques en cliquant sur les options des différents menus offerts par SPSS.\nMais pourquoi vouloir changer de logiciel, me direz-vous, si SPSS rencontrait mes exigences ? Le problème principal était un problème de licence. Voyez-vous, le coût d’une licence annuelle de SPSS est particulièrement élevé, surtout pour un étudiant. Bien entendu, la licence institutionnelle de l’université permettait à mes étudiant d’utiliser gratuitement SPSS à partir des ordinateurs mis à leur disposition, et ce, 24h sur 24 (si désiré…). Par contre, j’avais constaté deux choses. La première était que mes étudiants pirataient des codes d’accès à SPSS, ce qui leur permettait d’installer illégalement (et temporairement) SPSS directement sur leur ordinateur. La seconde était que lorsque mes étudiants quittaient le campus pour aller étudier dans d’autres institutions, SPSS n’était pas toujours disponible (certaines institutions et laboratoires de recherche utilisent STATA, SAS ou R). Leur apprentissage avec SPSS s’avérait pratiquement inutile, à moins, bien évidemment, qu’ils n’investissent de l’argent pour se payer une licence annuelle de SPSS, ce que peu d’entre eux étaient enclins à faire.\nR, étant gratuit, s’avérait donc pour moi une belle opportunité d’enseigner un logiciel statistique qui serait toujours disponible, peu importe où se retrouveraient mes étudiants pour compléter leurs études et leur formation1. Non, la substitution de SPSS par R en salle de classe ne fut pas facile… loin de là ! Et je remercie les premiers groupes d’étudiants qui ont dû subir cette transition : ils ont fait preuve d’une grande compréhension et d’une patience légendaire. Au cours des dernières années, j’ai été en mesure d’ajuster mon enseignement de manière à maximiser mon enseignement sur l’utilisation de R, la compréhension de la démarche statistique et l’interprétation des résultats. De plus, la rédaction des travaux, qui au départ se faisait à partir de captures d’écrans des résultats affichés dans la console de R, s’est transformée, avec la publication de l’application Quarto qui utilise le language rmarkdown, de manière à produire des documents complets, dynamiques, agréables à lire et facilement partageables. De mon point de vue, R, lorsque jumelé avec l’extension rmarkdown, permet une intégration complète de la démarche statistique2.\nLe présent document reflète donc mon expérience des dernières années avec l’enseignement de R et de l’utilisation du format R Notebook de l’extension rmarkdown pour R. Bien qu’aux premiers abords, R et R Notebook semblent intimidant, l’étudiant qui prend le temps de suivre la démarche et les exercices présentés ci-dessous sera en mesure de produire des documents de qualité dans le domaine des statistiques mais aussi dans n’importe quelle discipline.\nBonne lecture,\nSylvain",
    "crumbs": [
      "Préface"
    ]
  },
  {
    "objectID": "preface.html#footnotes",
    "href": "preface.html#footnotes",
    "title": "Préface",
    "section": "",
    "text": "La substitution de SPSS par R me fut d’une grande utilité à l’hiver 2021 lorsque, en raison de la pandémie de la COVID-19, j’ai dû enseigner mon cours de statistiques à distance à tous mes étudiants. Ils n’ont eux qu’à télécharger R, en toute légalité.↩︎\nNotez que le logiciel STATA permet une intégration relativement similaire avec Microsoft Word. Mais, une licence perpétuelle étudiante de STATA coûte malgré tout quelque centaines de dollars…↩︎",
    "crumbs": [
      "Préface"
    ]
  },
  {
    "objectID": "a_propos_auteur.html",
    "href": "a_propos_auteur.html",
    "title": "À propos de l’auteur",
    "section": "",
    "text": "Après avoir suivi tous les cours offerts en mathématiques et en psychologie au niveau collégial, lorsque vient le temps de m’inscrire dans un programme d’études à l’université, mon cœur balançait entre ces deux disciplines. Finalement, pour ma formation universitaire, j’ai opté pour la psychologie, la plus belle des sciences, comme je me plais si souvent à le dire. Mais quelle ne fut pas ma surprise lorsque j’ai constaté que les conclusions de la psychologie reposaient, en grande partie, sur une démarche rigoureuse appuyée par des analyses statistiques. Mon désir d’apprentissage était comblé !\nMes intérêts marqués pour les mathématiques et les statistiques m’ont amené, lors de mes études doctorales en psychologie, à enseigner des cours de statistiques au niveau gradué à l’Université Laval et au niveau collégial, au Petit Séminaire de Québec. À la fin de mes études doctorales, j’ai accepté un poste de professeur régulier en psychologie à l’Université de Moncton, campus d’Edmundston où j’y enseigne, entre autres, les statistiques. Mes compétences en statistiques sont bien reconnues par mes collègues, ce qui m’amène à collaborer avec différents chercheurs afin de les aider à planifier leurs études, et/ou à les aider à analyser et à interpréter leurs propres données de recherche.\nSylvain Fiset, Ph.D.\nProfesseur titulaire en psychologie\nUniversité de Moncton, campus d’Edmundston\nEdmundston, N.-B., Canada",
    "crumbs": [
      "À propos de l'auteur"
    ]
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Interface de R\nQui n’a pas perdu son temps, ou même pire, fait des erreurs, lors de la transcription des résultats d’une analyse statistique vers son traitement de texte (ex: Microsoft Word, LaTeX, LibreOffice, etc.) ? Je vous promets que si vous suivez la démarche qui a fait l’objet d’un commentaire dans la revue Nature (Guitard et Fiset 2023) et que je propose dans le présent livre, cette approche du copier-coller sera bientôt chose du passé. Terminées les erreurs et la perte de temps. Et vive la productivité ! Mais tout d’abord, examinons brièvement les raisons qui me poussent à proposer l’utilisation de Quarto à partir de RStudio.\nDans sa version de base, l’interface d’utilisation du logiciel R est relativement aride (voir Figure 1.1), ce qui n’en facilite pas l’apprentissage. Toute information échangée entre l’analyste et le logiciel passe par la console de R. Une seule petite ligne où une série de codes, plus ou moins complexes, est écrite et soumise au logiciel. Ce dernier, à partir des consignes de l’analyste, emmagasine l’information, la transforme ou l’analyse. Les résultats sont ensuite affichés après la ligne de codes dans une fenêtre déroulante. Donc, chaque nouvelle ligne de codes entraîne la disparition du résultats obtenus précédemment. Cette interface est donc particulièrement désagréable à utiliser et plus la démarche d’analyse est longue, plus elle est sujette aux erreurs de transcription des résultats de l’analyse vers le logiciel de traitement de texte. De plus, lors de la création d’un graphique, une fenêtre additionnelle s’ouvre à l’écran et bloque, régulièrement, la vue de la console de R.\nFigure 1.1: Exemple de la console R classique",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "introduction.html#interface-de-rstudio",
    "href": "introduction.html#interface-de-rstudio",
    "title": "1  Introduction",
    "section": "1.2 Interface de RStudio",
    "text": "1.2 Interface de RStudio\nHeureusement, certains logiciels ont été développés pour agrémenter l’usage de R. Parmi ceux-ci, le logiciel RStudio est possiblement celui dont l’utilisation est la plus répandue. RStudio présente une interface divisée en quatre fenêtres (voir Figure 1.2)).\n\nLa fenêtre Source comprend les lignes de codes du script .R ou .Rmd.\nLa fenêtre Console permet d’écrire une ligne de codes R ou d’obtenir les résultats d’un code R.\nLa fenêtre Environnement, History, Connexion contient les objets R en mémoire et l’historique des codes R utilisés.\nLa fenêtre Files, Plots, Packages, help, Viewer comprend de nombreuses fonctions qui permettent de copier les fichiers, examiner les graphiques, d’installer des extension, etc..\n\nMalgré sa flexibilité, dans sa version de base, RStudio demeure rigide dans sa façon de présenter l’information. En effet, les tableaux, graphiques et/ou ensembles de données doivent être exportés vers d’autres logiciels pour y être intégrés (ex: Microsoft Word) dans un document final.\n\n\n\n\n\n\n\n\nFigure 1.2: Illustration de la configuration de RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "introduction.html#langage-r-markdown",
    "href": "introduction.html#langage-r-markdown",
    "title": "1  Introduction",
    "section": "1.3 Langage R Markdown",
    "text": "1.3 Langage R Markdown\nCette rigidité est maintenant chose du passé. En effet, depuis l’intégration du langage R Markdown à l’aide de l’extension rmarkdown (Xie, Dervieux, et Riederer 2020; Xie, Allaire, et Grolemund 2018), le logiciel RStudio permet de créer des fichiers dynamiques dans plusieurs formats (HTML, PDF, Word). Cela signifie qu’une fois les données récoltées, toutes les étapes de l’analyse, en passant de la transformation des variables jusqu’à la publication du rapport final, se déroulent dans RStudio (voir Figure 1.3). Par exemple, la fenêtre de gauche de la Figure 1.3 comprend les codes R utilisés alors que la fenêtre de droite de la Figure 1.3 présente le résultat final des commandes R en format .html. Cela représente un net avantage puisque chaque petit changement est automatiquement intégré dans le document final.\n\n\n\n\n\n\n\n\nFigure 1.3: Illustration d’un document en format html. Les codes sont écrits dans la fenêtre Source à la gauche et le fenêtre Viewer présente le document final",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "introduction.html#format-quarto",
    "href": "introduction.html#format-quarto",
    "title": "1  Introduction",
    "section": "1.4 Format Quarto",
    "text": "1.4 Format Quarto\nBien que le langage rmarkdown permette de produire un document final dans divers formats, je me limite en n’en présenter qu’un seul, soit le format Quarto. Vous découvrirez, à la lecture du présent document, pourquoi je favorise l’utilisation du format Quarto comparativement aux autres formats proposés comme R Notebook ou R Markdown. Ainsi, après avoir complété la lecture de ce document, vous serez en mesure :\n\nd’utiliser le format de présentation Quarto afin d’examiner et d’analyser des données à partir des logiciels R et RStudio,\nde produire des documents de qualité facilement partageables avec vos collaborateurs.\n\n\n\n\n\nGuitard, Dominic, et Sylvain Fiset. 2023. « Stat checkers: make reproducible computer code mandatory. » Nature 616 (7957): 433. https://doi.org/10.1038/d41586-023-01275-8.\n\n\nXie, Yihui, J. J. Allaire, et Garrett Grolemund. 2018. R Markdown: The Definitive Guide. New York: Chapman; Hall/CRC. https://doi.org/10.1201/9781138359444.\n\n\nXie, Yihui, Christophe Dervieux, et Emily Riederer. 2020. R Markdown Cookbook. Boca Raton: Chapman; Hall/CRC. https://doi.org/10.1201/9781003097471.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "R_RStudio.html",
    "href": "R_RStudio.html",
    "title": "2  R et RStudio",
    "section": "",
    "text": "2.1 Intro à R\nDans ce chapitre, vous trouverez un brève description des logiciels R et RStudio. À la toute fin de ce chapitre, vous trouverez aussi les liens pour les télécharger et les installer sur votre ordinateur1.\nR a été développé par Robert Gentleman et Ross Ihaka du département de statistiques de l’Université de Auckland (Nouvelle-Zélande). Le nom R proviendrait de la première lettre du prénom de ces deux auteurs 2. Depuis le milieu des années 1997, R est la responsabilité d’un groupe de travail intitulé The R Project (Douglass et al. 2022; Wickham et Grolemund 2017). La liste des membres de ce groupe est disponible en cliquant ici.\nR n’est pas simplement un logiciel de statistiques mais bien une suite intégrée de fonctionnalités logicielles. R est un environnement de travail pour la manipulation de données, le calcul de données et la représentation graphique de données. Entre autres, R :",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R et RStudio</span>"
    ]
  },
  {
    "objectID": "R_RStudio.html#intro-à-r",
    "href": "R_RStudio.html#intro-à-r",
    "title": "2  R et RStudio",
    "section": "",
    "text": "permet de manipuler, d’enregistrer et de présenter des données\ncomprend de nombreux opérateurs arithmétiques, logiques et de comparaison\ncomprend une multitude d’outils pour l’analyse statistique de données\ncomprend une capacité graphique exhaustive\ncomprend un langage de programmation\n\n\n2.1.1 Avantages\nEn plus de sa gratuité (telle que discutée dans la préface), R possède de nombreux avantages.\n\nR permet de produire, à partir d’un même système, des analyses statistiques très simples mais aussi des analyses extrêmement complexes.\nLes nouvelles approches statistiques développées par les statisticiens sont rapidement implantées par les développeurs de la communauté R. Il n’est pas nécessaire d’attendre des années avant qu’une compagnie intègre cette nouvelle approche dans son logiciel.\nR possède un langage très flexible et il peut être adapté au besoin de l’utilisateur.\nR est de nature open source. Donc, les codes des différentes fonctions statistiques sont disponibles à tous, ce qui permet de vérifier l’exactitude de l’approche utilisée et de les reproduire.\nL’apprentissage de R facilite grandement l’apprentissage de d’autres logiciels statistiques, comme STATA ou SPSS. L’inverse, cependant, n’est pas vrai.\nL’apprentissage de R favorise aussi l’apprentissage de d’autres langages informatiques, comme Python.\nFogarty (2018) argumente même que la connaissance de R est un atout incomparable lors de la sélection des candidats qui appliquent aux études gradués. Selon lui, les opportunités d’emploi sont plus grandes pour les candidats ayant des connaissances avec R que pour les autres candidats.\n\n\n\n2.1.2 Désavantages\nMalgré ses avantages, R possèdent quelques inconvénients qui doivent être soulignés :\n\nContrairement à STATA, SPSS ou SAS, R n’offre pas de support d’aide centralisé. Heureusement, la communauté R est planétaire et il est relativement facile de trouver réponse à nos questions à l’aide du moteur de recherche de Google.\nLa courbe d’apprentissage de R est relativement abrupte et les premiers pas avec R peuvent être décourageants.\nIl y a un manque de consistance dans l’implantation des différentes fonctions statistiques et dans la présentation des fonctions d’aide. Certaines extensions sont très bien expliquées à l’aide de vignettes alors que d’autres sont présentées de façon très rudimentaire.\nLes mêmes fonctions statistiques peuvent apparaître dans différentes extensions, dédoublant ou triplant même la même fonctionnalité.\nDifférentes fonctions statistiques associées à des extensions différentes possèdent le même nom mais elles n’ont pas la même utilité. Heureusement, il existe des solutions relativement simples pour préciser la fonction que nous désirons utiliser.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R et RStudio</span>"
    ]
  },
  {
    "objectID": "R_RStudio.html#intro-à-rstudio",
    "href": "R_RStudio.html#intro-à-rstudio",
    "title": "2  R et RStudio",
    "section": "2.2 Intro à RStudio",
    "text": "2.2 Intro à RStudio\nRStudio a été développé par une compagnie privée du nom de Posit. RStudio est une interface logicielle entre R et l’utilisateur. Dans sa version de base, telle que démontrée précédemment, R présente une interface relativement sévère qui est difficile à utiliser. RStudio a été développé dans le but d’améliorer le plaisir de l’utilisateur qui interagit avec R.\nTel que présenté précédemment précédamment, RStudio comprend plusieurs fenêtres qui permettent à l’analyste de rédiger les codes R, tout en examinant les données et les résultats. De plus, RStudio facilite l’exportation des résultats en plusieurs formats (.docx, .pdf, .html).\nNotez que RStudio ne se limite pas à être l’interface avec R puisque de nombreux autres langages de programmation y ont été intégrés (ex : Python, STAN, C++). Nous allons utiliser la version gratuite de RStudio, soit RStudio IDE. IDE signifie Integrated Development Environment. RStudio IDE fonctionne avec plusieurs systèmes d’exploitation, dont Windows, MacOS et Linux.\nAfin de faciliter l’interaction avec R, certaines alternatives à RStudio existent. À titre d’exemples, je souligne Jupyter notebook, Jupyter lab, Architect, ou R AnalyticFlow. Malgré tout, RStudio demeure le standard de qualité quand vient le temps d’interagir avec R. Personnellement, si RStudio n’existait pas, j’opterais pour Jupyter notebook via son intégration avec la plateforme Anaconda Navigator, principalement en raison de sa simplicité d’utilisation et de son intégration avec le langage Markdown. La Figure 2.1 présente un exemple de codes R à partir de l’application Jupiter notebook (à gauche) et son rendu en format .html (à droite).\n\n\n\n\n\n\n\n\nFigure 2.1: Illustration de codes R et du langage Markdown à partir de l’application Jupiter Notebook (image de gauche) et son rendu en format .html (image de droite)\n\n\n\n\n\n\n2.2.1 Avantages\nDans le but de faciliter l’interaction avec l’utilisateur, RStudio présente quelques avantages très notables. Bien que ma démarche de présentation peut sembler un peu précoce pour celles et ceux d’entre vous qui ne connaissez pas encore RStudio, j’en profite immédiatement pour présenter deux de ses avantages.\n\n2.2.1.1 Syntaxe intégrée\nRStudio facilite la rédaction des scripts R en proposant de compléter votre syntaxe. Ainsi, dès que vous débutez à écrire le nom d’une fonction, RStudio propose (1) le nom de quelques fonctions qui débute par les mêmes lettres et (2) la syntaxe à suivre pour compléter l’écriture de la fonction. Par exemple, imaginons que nous désirons effectuer un test binomial. Le nom de la fonction à utiliser est binom.test(). Dans un bloc de codes R, dès que j’inscris binom, RStudio me propose deux choix possibles de fonctions qui débutent par binom (voir Figure 2.2). Il me suffit de sélectionner celle que je désire utiliser pour qu’elle se complète automatiquement dans mon bloc de codes R. Par la suite, RStudio propose à nouveau la syntaxe à utiliser pour compléter l’écriture de la fonction sélectionnée (voir Figure 2.3).\n\n\n\n\n\n\n\n\nFigure 2.2: Suggestions de fonctions offertes par RStudio\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.3: Syntaxe proposée par RStudio pour la fonction binom.test\n\n\n\n\n\n\n\n2.2.1.2 Examiner les objets R\nLa fenêtre Environment vous permet de voir rapidement tous les objets R que vous avez créés lors de votre session de travail et de les examiner via une fenêtre qui ressemble à un chiffrier électronique (comme Excel ou Numbers). Prenons l’exemple du bloc de codes R de la Figure 2.4 dans lequel j’ai créé un ensemble de données nommé d1 qui contient le quotient intellectuel (QI) de 10 participants fictifs :\n\n\n\n\n\n\n\n\nFigure 2.4: Création de l’objet d1 qui contient le QI de 10 participants\n\n\n\n\n\nJe peux examiner le contenu de cet objet d1 à partir de la fenêtre Environment de RStudio en cliquant sur le triangle blanc placée dans un cercle bleu à la gauche l’objet d1 (voir Figure 2.5).\n\n\n\n\n\n\n\n\nFigure 2.5: Examiner le contenu de l’objet d1 dans la fenêtre Environment de RStudio\n\n\n\n\n\nJe peux aussi examiner l’ensemble du contenu de l’objet d1 en cliquant sur le symbole du chiffrier situé à l’extrême droite de l’objet d1 dans le fenêtre Environment (voir Figure 2.6) :\n\n\n\n\n\n\n\n\nFigure 2.6: Examiner le contenu de l’objet d1 à l’aide du tableur intégré de RStudio\n\n\n\n\n\n\n\n\n2.2.2 RStudio - vidéo d’introduction\nLe nombre d’options offertes par RStudio est particulièrement vaste et seule une bonne séance de travail avec RStudio nous permettrait d’en faire le tour. Néanmoins, ci-dessous, j’ai ajouté un lien pour une vidéo (10 min. 13 sec.) qui montre les principales caractéristiques de RStudio. Pour toute personne qui débute avec RStudio, le visionnement de cette vidéo est fortement recommandé. Personnellement, j’aurais bien aimé avoir accès à ce type de documentation lorsque j’ai débuté à utiliser RStudio !\n\nVidéo (en anglais) : Comment utiliser RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R et RStudio</span>"
    ]
  },
  {
    "objectID": "R_RStudio.html#installer-r-rstudio",
    "href": "R_RStudio.html#installer-r-rstudio",
    "title": "2  R et RStudio",
    "section": "2.3 Installer R & RStudio",
    "text": "2.3 Installer R & RStudio\nSi vous avez déjà installé R et RStudio, vous pouvez sauter cette section.\n\n2.3.1 Vidéo d’installation\nSi vous n’avez pas encore installé R et RStudio, voici une vidéo (7 min. 38 sec.) dans laquelle je montre comment installer les logiciels R et RStudio à partir du site web de téléchargement de la compagnie Posit. La démonstration est faite à la fois pour le système d’exploitation Windows et pour le système d’exploitation macOS. Pour macOS, j’explique aussi comment identifier si votre ordinateur possède un processeur Apple silicon ou un processeur Intel, ce qui est important pour télécharger la bonne version de R. La Section 2.3.2 présente les liens web pour installer R et RStudio.\n\nVidéo (en français) : Installation R RStudio\n\n\n\n2.3.2 Liens web\nVoici les liens pour télécharger une version récente (et gratuite) de R et de RStudio. Assurez-vous de télécharger les versions adaptées à votre système d’exploitation (OS, Windows, Linux) :\n\nR\nRStudio Desktop.\nXQuartz. Pour les utilisateurs d’ordinateur Mac, l’installation du logiciel XQuartz est aussi nécessaire pour la version 10.9 de OS X et les versions les plus récentes de OS X.\n\n\n\n2.3.3 Installation\nUne fois les fichiers .exe (PC) ou .dmg (Mac) téléchargés dans votre dossier de Téléchargement, cliquez sur les fichiers pour installer les applications et ensuite, suivez les étapes d’installation. Débutez par installer R avant d’installer RStudio.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R et RStudio</span>"
    ]
  },
  {
    "objectID": "R_RStudio.html#problèmes-et-solutions",
    "href": "R_RStudio.html#problèmes-et-solutions",
    "title": "2  R et RStudio",
    "section": "2.4 Problèmes et solutions",
    "text": "2.4 Problèmes et solutions\nDans l’éventualité où, peu importe la raison, vous ne réussissez pas à installer une version pleinement fonctionnelle de R et/ou de RStudio sur votre ordinateur, je vous encourage à utiliser Posit Cloud (voir Chapitre 7). Cette version de RStudio vous permet d’utiliser R et RStudio directement dans votre navigateur web.\n\n\n\n\nDouglass, Alex, Deon Roos, Francesca Mancini, Ana Couto, et David Lusseau. 2022. An Introduction to R. https://alexd106.github.io/Rbook/.\n\n\nFogarty, Brian J. 2018. Quantitative Social Science Data with R: An Introduction. Thousand Oaks, California: SAGE Publications, Inc. https://us.sagepub.com/en-us/nam/quantitative-social-science-data-with-r/book257236.\n\n\nWickham, Hadley, et Garrett Grolemund. 2017. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. 1st edition. Sebastopol, CA: O’Reilly Media. https://r4ds.had.co.nz/.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R et RStudio</span>"
    ]
  },
  {
    "objectID": "R_RStudio.html#footnotes",
    "href": "R_RStudio.html#footnotes",
    "title": "2  R et RStudio",
    "section": "",
    "text": "L’interface web Posit Cloud permet d’utiliser gratuitement les logiciels R et RStudio sans qu’il ne soit nécessaire de télécharger R et RStudio sur votre ordinateur. Mais prenez note qu’il y a un maximum d’heures gratuites d’utilisation et votre compte devient bloquer jusqu’au mois suivant. La seule solution consiste à payer un certain montant d’argent par mois ($).↩︎\nPrenez note que R est un langage de programmation qui s’apparente au langage S, lequel a été développé par Rick Becker, John Chambers et Allan Wilks de la compagnie AT&T Bell Laboratories.↩︎",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>R et RStudio</span>"
    ]
  },
  {
    "objectID": "Extensions_R.html",
    "href": "Extensions_R.html",
    "title": "3  Extensions R",
    "section": "",
    "text": "3.1 Installation des extensions\nBien qu’à la base, R possède une multitude de fonctionnalités, il y a toujours une fonction qui manque ! En raison de sa license d’utilisation, R peut facilement être amélioré à partir d’extensions (en anglais : packages). Les extensions sont des programmes qui s’ajoutent à R. Ces extensions sont développées par des programmeurs indépendants et ils répondent à des besoins spécifiques. Bref, de nombreux programmeurs ont ajouté (et ajoutent encore) de nombreuses extensions dont le but est d’ajouter les fonctions manquantes à R. Vous pouvez consulter la liste des nouvelles extensions en consultant le site https://rweekly.org/archive.\nLors de son téléchargement initial, la version de base de R comprend déjà plusieurs extensions. Mais, selon ses besoins, l’utilisateur peut en ajouter autant qu’il le veut. Habituellement, les extensions sont déposées par leur(s) auteur(s) sur CRAN. CRAN signifie Comprehensive R Archive Network. Le nombre d’extensions disponibles sur CRAN se chiffre par milliers. Bien que les extensions ne soient pas toutes disponibles sur CRAN (plusieurs sont disponibles sur GitHub ou d’autres sites webs indépendants), il est avantageux d’utiliser les extensions disponibles sur CRAN :\nL’installation des extensions peut se faire de différentes façons via l’interface de RStudio. Malgré tout, selon moi, l’approche la plus simple consiste à inscrire la ligne de code install.packages(pkgs=\"nom de l'extension\") dans la fenêtre Console de RStudio1.\nTout comme les logiciels que nous installons et que nous utilisons sur notre ordinateur (ex: Microsoft Word), les extensions ne doivent être installées qu’une seule fois mais elles doivent être ouvertes à chaque fois que nous voulons les utiliser durant une séance de travail2. De plus, tout comme nos logiciels, les extensions doivent être mises à jour régulièrement parce que les auteurs leur apportent des améliorations3.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Extensions R</span>"
    ]
  },
  {
    "objectID": "Extensions_R.html#extension-rmarkdown",
    "href": "Extensions_R.html#extension-rmarkdown",
    "title": "3  Extensions R",
    "section": "3.2 Extension rmarkdown",
    "text": "3.2 Extension rmarkdown\nAu cours des années, certaines extensions sont devenues très populaires et elles sont pour ainsi dire essentielles. L’extension rmarkdown est l’une de celles-ci. L’extension rmarkdown est décrite, par ses auteurs, comme un cadre de travail qui :\n\npermet d’écrire, d’exécuter et de sauvegarder des codes d’analyses et\nde produire des documents de haute qualité qui sont reproductibles, dynamiques et disponibles dans plusieurs formats.\n\nParmi les formats R Markdown disponibles, notons le format PDF, HTML (incluant le format R Notebook), Word. De plus, l’extension rmarkdown permet de produit des documents écrits (comme des livres électroniques, via l’extension Bookdown) mais aussi des présentations (comme PowerPoint, via R Presentation).",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Extensions R</span>"
    ]
  },
  {
    "objectID": "Extensions_R.html#vérifier-si-rmarkdown-est-installée",
    "href": "Extensions_R.html#vérifier-si-rmarkdown-est-installée",
    "title": "3  Extensions R",
    "section": "3.3 Vérifier si rmarkdown est installée",
    "text": "3.3 Vérifier si rmarkdown est installée\nSi vous avez déjà installé l’extension rmarkdown, vous n’avez rien à faire et vous pouvez sauter l’étape de l’installation. Il est aussi possible que la version la plus récente de R contienne par défaut l’extension rmarkdown. Voici comment faire pour vérifier. Dans la fenêtre Files de RStudio, cliquez sur l’onglet Packages et défiler la liste d’extensions déjà installées jusqu’à rmarkdown. Si rmarkdown est là (comme dans la Figure 3.1), vous n’avez rien à faire puisque l’extension est déjà installée.\n\n\n\n\n\n\n\n\nFigure 3.1: Vérifier si l’extension rmarkdown est installée à partir de la fenêtre Files de RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Extensions R</span>"
    ]
  },
  {
    "objectID": "Extensions_R.html#installer-rmarkdown",
    "href": "Extensions_R.html#installer-rmarkdown",
    "title": "3  Extensions R",
    "section": "3.4 Installer rmarkdown",
    "text": "3.4 Installer rmarkdown\nL’approche la plus simple pour installer l’extension rmarkdown consiste à :\n\nouvrir le logiciel RStudio\nécrire install.packages(\"rmarkdown\") dans la fenêtre Console de RStudio (notez que selon la configuration des fenêtres de RStudio, la fenêtre Console peut se trouver en bas à gauche de l’écran) (Voir Figure 3.2)\nappuyer sur la touche enter (↵)\n\n\n\n\n\n\n\n\n\nFigure 3.2: Installation de l’extension rmarkdown à partir de la fenêtre Console de RStudio\n\n\n\n\n\n\nPar la suite, un message confirme l’installation de l’extension (nommée package, en anglais) dans la Console de RStudio (Voir Figure 3.3).\n\n\n\n\n\n\n\n\n\nFigure 3.3: Confirmation de l’installation",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Extensions R</span>"
    ]
  },
  {
    "objectID": "Extensions_R.html#footnotes",
    "href": "Extensions_R.html#footnotes",
    "title": "3  Extensions R",
    "section": "",
    "text": "Faites attention de ne pas écrire cette ligne de codes dans votre script R de la fenêtre Source de RStudio. Sinon, l’extension sera réinstallée à toutes les fois que vous exécuterez le bloc de codes qui le contient dans la fenêtre Source. Si vous oubliez, ce n’est pas dommageable pour votre ordinateur mais c’est simplement inutile…↩︎\nÀ partir du code library(nom de l'extension) que nous inscrivons dans le script R de la fenêtre Source de RStudio.↩︎\nPour mettre à jour une extension en particulier, il suffit de réinstaller l’extension à partir du code install.packages(pkgs=\"nom de l'extension\")↩︎",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Extensions R</span>"
    ]
  },
  {
    "objectID": "Quarto.html",
    "href": "Quarto.html",
    "title": "4  Quarto",
    "section": "",
    "text": "4.1 Démarche avec Quarto\nL’application Quarto est relativement récente. Elle permet d’utiliser le logiciel R à partir de blocs de codes qui sont intégrés dans le document. Ces blocs de codes R sont insérés, au besoin, autour du texte qui documente la démarche de l’analyste. Il est donc possible de combiner le texte et les analyses (incluant tableaux, figures, résultats) à l’intérieur d’un même document.\nLa démarche de l’analyste qui utilise Quarto se résume, normalement, par les étapes suivantes :\nLa Figure 4.1 présente un résumé visuel de cette démarche :",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "Quarto.html#démarche-avec-quarto",
    "href": "Quarto.html#démarche-avec-quarto",
    "title": "4  Quarto",
    "section": "",
    "text": "Créer un document Quarto à partir de RStudio.\nAjuster les métadonnées du ficher Quarto pour les rendre conformes au type de document final désiré.\nInsérer un bloc de codes R et importer un ou des fichiers de données (ex : via un fichier Excel).\nExaminer, manipuler, analyser et présenter les données à l’aide de plusieurs blocs de codes R.\nDocumenter sa démarche d’analyse et ses interprétations en insérant du texte autour des blocs de codes R à l’aide du langage R Markdown. Normalement, cette étape est effectuée à chaque fois qu’un bloc de codes R est intégré dans le document Quarto.\nGénérer, sauvegarder et publier le document final (en format HTML, PDF ou Word).\n\n\n\n\n\n\n\n\nFigure 4.1: Démarche de l’analyste qui utilise Quarto",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "Quarto.html#avantages",
    "href": "Quarto.html#avantages",
    "title": "4  Quarto",
    "section": "4.2 Avantages",
    "text": "4.2 Avantages\nLe format Quarto possède de nombreux avantages :\n\nSon premier avantage réside dans la flexibilité du format de présentation. En effet, le document final peut facilement être exporté1 en format HTML, Word ou PDF (ce dernier, à l’aide du langage LaTeX)1.\nSon second avantage réside dans le fait que les résultats obtenus à l’aide des codes exécutés dans Quarto peuvent s’afficher directement sous les codes R à l’écran, mimant ainsi Jupiter Notebook pour le langage de programmation Python. Cela facilite la documentation des différentes étapes de l’analyse statistique.\nSon troisième avantage est que la rédaction du document se fait à l’aide du langage R Markdown. La syntaxe Markdown est simple et facile à utiliser, ce qui permet de créer des documents de qualité sans à avoir à insérer une série de codes plus ou moins complexes (comme le langage html).\nSon quatrième avantage est que l’analyste peut documenter ses analyses et ses conclusions dans le même document que celui utilisé pour examiner, organiser, analyser et présenter ses résultats. Cette approche permet facilement le partage et la reproductibilité des conclusions tirées par l’analyste.\nFinalement, l’intégration de R avec RStudio via le format Quarto est dynamique. Cela signifie que lorsque les données utilisées pour produire les analyses changent (exemple : par l’ajout de nouveaux participants), une nouvelle exécution des blocs de codes R rafraîchissent simultanément les tableaux et les figures du document R Notebook. Il n’est donc pas nécessaire d’utiliser la vieille et désuète technique du copier-coller, laquelle est propice aux erreurs et aux oublis.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "Quarto.html#désavantages",
    "href": "Quarto.html#désavantages",
    "title": "4  Quarto",
    "section": "4.3 Désavantages",
    "text": "4.3 Désavantages\nQuarto possède aussi quelques désavantages dont il faut être conscients et qu’il ne faut pas oublier, faute de quoi, l’utilisation de Quarto sera désagréable et le document final ne sera pas satisfaisant.\n\nMalgré sa simplicité d’utilisation, le format Quarto (et le langage Markdown) demande, lors de ses premières utilisations, de porter attention à de nombreux petits détails qui risquent d’importuner et de décourager l’utilisateur. Heureusement, le présent document examine la majorité de ces détails et il suffit de suivre la démarche présentée pour obtenir un document de qualité. Aussi, au lien de débuter avec un fichier neuf à toutes les fois, je recommande fortement de dupliquer les fichiers Quarto qui fonctionnement bien. Cette approche accélère la productivité !\nUne autre difficulté réside dans le fait qu’au début, l’utilisateur tente d’apprendre à la fois l’utilisation du format Quarto (via le logiciel RStudio) et celle du logiciel R. L’apprenant a parfois de la difficulté à dissocier les codes du logiciel R avec ceux du format R Notebook. Le présent document a justement pour objectif de permettre à l’apprenant de bien maîtriser le format Quarto, pour se concentrer, par la suite, sur l’apprentissage des codes R.\nLe format Quarto est dynamique. Il est donc un peu gourmant au niveau de la mémoire pour les ordinateurs qui commencent à avoir de l’âge. Pour les documents courts, cela ne cause pas de problème. Mais pour les documents longs, cela risque d’agacer l’utilisateur.\nLe format Quarto est extrêmement bien adapté à la production de documents électroniques de type HTML. Malheureusement, l’exportation vers les formats PDF et Word nécessitent souvent des ajustements après la production final du document.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "Quarto.html#installer-quarto",
    "href": "Quarto.html#installer-quarto",
    "title": "4  Quarto",
    "section": "4.4 Installer Quarto",
    "text": "4.4 Installer Quarto\nPour installer Quarto, il suffit de visiter le site de Quarto de la compagnie Posit. Cliquez sur Get Started et ensuite sur Download Quarto CLI. Par défaut, Quarto détecte votre système d’exploitation (Ubuntu, Linus, Mac, Windows). Une fois le fichier téléchargé, il faut l’installer sur votre ordinateur comme les autres logiciels.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "Quarto.html#vérifier-la-version-de-quarto-installée-sur-votre-ordinateur",
    "href": "Quarto.html#vérifier-la-version-de-quarto-installée-sur-votre-ordinateur",
    "title": "4  Quarto",
    "section": "4.5 Vérifier la version de Quarto installée sur votre ordinateur",
    "text": "4.5 Vérifier la version de Quarto installée sur votre ordinateur\nPuisque Quarto est mis à jour régulièrement, il est parfois nécessaire de vérifier la version qui est déjà installée sur votre ordinateur. Pour cela, dans la fenêtre Console de RStudio, cliquez sur Terminal et inscrire quarto check ou quarto –version. La première commande fait une longue série de vérifications alors que la second commande indique seulement le numéro de la version de Quarto qui est installée. À vous de sélectionner la commande qui vous convient le mieux. La Figure 4.2 présente la deuxième option :\n\n\n\n\n\n\nFigure 4.2: Vérification de la version de Quarto qui est installée",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "Quarto.html#footnotes",
    "href": "Quarto.html#footnotes",
    "title": "4  Quarto",
    "section": "",
    "text": "Pour exporter le fichier dans un autre format, comme le format LaTeX. Mais ce format ne sera pas abordé dans le présent document. Notez que le format PDF n’est disponible que si vous avez déjà installé le langage LaTeX sur votre ordinateur. À partir d’un bloc de codes R, il est possible d’installer TinyTeX, laquelle est une librairie qui permet la publication en format LaTeX. Après avoir installer la librairie TinyTeX à l’aide du code install.packages(‘tinytex’), tapez le code tinytex::install_tinytex() suivi de la touche↩︎",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "RStudio_options.html",
    "href": "RStudio_options.html",
    "title": "5  Options de RStudio",
    "section": "",
    "text": "5.1 Options Code\nAvant de créer notre premier fichier Quarto, je me propose de vous initier à quelques options de RStudio qui détermineront votre façon de travailler avec Quarto1. Dans le menu principal de RStudio, sélectionnez l’onglet Tools &gt; Global Options… (voir Figure 5.1).\nDans un premier temps, il faut s’assurer que le type d’encodage de RStudio soit réglé à UTF-8. Cela nous assure que les accents seront disponibles en tout temps d’un ordinateur à l’autre. Dans le menu principal de RStudio, sélectionnez l’onglet Tools &gt; Global Options…. Ensuite, dans Code, sélectionnez Saving, cliquez sur Change…, sélectionnez UTF-8 et cliquez sur OK (voir Figure 5.2).\nFigure 5.2: Sélection du code UTF-8",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Options de RStudio</span>"
    ]
  },
  {
    "objectID": "RStudio_options.html#rstudio-affichage",
    "href": "RStudio_options.html#rstudio-affichage",
    "title": "5  Options de RStudio",
    "section": "5.2 RStudio affichage",
    "text": "5.2 RStudio affichage\nRStudio présente normalement quatre fenêtres, lesquelles peuvent être agencées selon les préférences de l’utilisateur :\n\nSource : Où nous écrivons le script de l’analyse (texte et codes)\nConsole : Où nous retrouvons les résultats des codes exécutés. Il est aussi possible d’écrire des codes dans la console\nEnvironnement, History, Connection : Où nous retrouvons les objets R et les ensembles de données disponibles\nFiles, Plots, Packages, Help, View : Contient plusieurs fenêtres très utiles où nous retrouvons nos fichiers, nos graphiques, nos extensions, l’aide et la visionneuse.\n\nPersonnellement, j’organise mes fenêtres selon la configuration présentée à la Figure 5.3. Deux raisons supportent ce choix:\n\nJe peux réduire au minimum la fenêtre Environnement afin de maximiser l’espace pour rédiger mon script R dans la fenêtre Source de RStudio.\nLa ligne de codes de la Console est toujours disponible. Cela me permet, par exemple, d’installer rapidement de nouvelles extensions ou de faire un calcul rapide.\n\nEn classe, je recommande à mes étudiants d’utiliser aussi cette configuration. De cette manière, les informations sont disposées aux mêmes endroits sur mon écran et sur leur écran de travail.\n\n\n\n\n\n\nFigure 5.3: Configuration recommandée pour les fenêtres de RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Options de RStudio</span>"
    ]
  },
  {
    "objectID": "RStudio_options.html#r-markdown-options",
    "href": "RStudio_options.html#r-markdown-options",
    "title": "5  Options de RStudio",
    "section": "5.3 R Markdown Options",
    "text": "5.3 R Markdown Options\nL’utilisation de Quarto nécessite de prendre quelques décisions avec le format d’affichage de R Markdown dans RStudio. Ci-dessous, je montre comment faire ces choix après avoir sélectionné, dans le menu principal de RStudio, l’onglet Tools &gt; Global Options….\nEt voici les choix possibles dans dans la fenêtre R Markdown &gt; Basic (voir lignes et cercles rouges dans la Figure 5.4) :\n\n5.3.1 Affichage Résultats\n\n\n\n\n\n\n\n\nFigure 5.4: Option pour obtenir le résultat d’un code R sous le bloc de codes\n\n\n\n\n\n\nLorsque nous travaillons avec Quarto, quelques options s’offrent à nous pour afficher le résultat du code R que nous venons d’exécuter :\n\nNous pouvons l’afficher directement sous le bloc de codes R (option = cochez Show output inline…). Voir la Figure 5.4.\nSi cette option n’est pas cochée, selon le type de codes R, le résultat apparaîtra dans l’une des fenêtres suivantes de RStudio : Console, Plots ou Viewer.\n\nAvec Quarto, je recommande de cocher l’option Show output inline… parce qu’on peut voir et conserver à l’écran le résultat d’un bloc de codes (voir un exemple dans la Figure 5.5).\n\n\n\n\n\n\n\n\n\nFigure 5.5: Exemple d’un résultat présenté sous un bloc de codes\n\n\n\n\n\n\n\n5.3.2 Affichage Doc Final\n\n\n\n\n\n\n\n\nFigure 5.6: Sélection de l’option Viewer Pane lorsque nous travaillons avec le format R Markdown\n\n\n\n\n\n\nAvec Quarto, lorsque nous générons le document final en cliquant sur l’option Render de la fenêtre Source de RStudio, le document final peut être affiché (voir la Figure 5.6) :\n\ndans une nouvelle fenêtre (option =&gt; Viewer Pane =&gt; Window), ou\ndans la fenêtre Viewer de RStudio (option =&gt; Viewer Pane =&gt; Viewer Pane).\n\nAvec Quarto, je recommande l’option Viewer Pane  parce qu’on peut voir en temps réel (ou presque) les changements apportés à notre document à partir de la fenêtre Source de RStudio. Dans l’exemple ci-dessous (voir Figure Figure 5.7), le texte et les blocs de codes R sont dans la fenêtre Source (à gauche) et le document final en format html est disponible dans la fenêtre Viewer (à droite).\n\n\n\n\n\n\n\n\n\nFigure 5.7: Exemple du format Quarto dans la fenêtre Viewer de RStudio (à droite dans la figure ci-haut)",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Options de RStudio</span>"
    ]
  },
  {
    "objectID": "RStudio_options.html#sec-dictadd",
    "href": "RStudio_options.html#sec-dictadd",
    "title": "5  Options de RStudio",
    "section": "5.4 Changer la langue du dictionnaire",
    "text": "5.4 Changer la langue du dictionnaire\nPar défaut, RStudio propose l’anglais comme langue d’usage. Le dictionnaire associé à RStudio est donc en anglais. Il est possible de changer la langue du dictionnaire. Voici les étapes à suivre.\n\n5.4.1 Ajouter des dictionnaires\nÀ partir de l’onglet Tools de RStudio, sélectionnez Global Options… (Figure Figure 5.8). Dans la fenêtre Options, cliquez sur Spelling. Sur la ligne de l’option Main dictionary language, cliquez sur le symbole combiné des flèches montantes (▲) et descendantes (▼). Finalement, dans la bande déroulante, sélectionnez l’option Install More Languages.\n\n\n\n\n\n\n\n\nFigure 5.8: Ajouter des dictionnaires supplémentaires dans RStudio\n\n\n\n\n\n\n\n5.4.2 Ajouter le dictionnaire français\nAprès avoir cliquer sur Install More Languages, une roue pointillée apparaît avec l’appellation Downloading additional languages. Lorsque ces informations disparaissent, cliquez sur la flèche descendante située à la droite de la langue par défaut (English) de RStudio et, dans la bande déroulante, sélectionnez French (Figure 5.9).\n\n\n\n\n\n\n\n\nFigure 5.9: Ajouter le dictionnaire français à RStudio\n\n\n\n\n\nN’oubliez pas de cliquez sur OK au bas de la page pour confirmer l’utilisation du dictionnaire français comme dictionnaire principal de RStudio (Figure 5.10).\n\n\n\n\n\n\n\n\nFigure 5.10: Ajouter des dictionnaires supplémentaires dans RStudio\n\n\n\n\n\n\n\n5.4.3 Vérification\nPour vérifier si vous avez bien installé le dictionnaire français, fermez la fenêtre Options de RStudio et ouvrez la de nouveau. En cliquant sur l’onglet Spelling, vous verrez que le dictionnaire principal de RStudio est French (Figure 5.11).\n\n\n\n\n\n\n\n\nFigure 5.11: Ajouter des dictionnaires supplémentaires dans RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Options de RStudio</span>"
    ]
  },
  {
    "objectID": "RStudio_options.html#mot-de-la-fin",
    "href": "RStudio_options.html#mot-de-la-fin",
    "title": "5  Options de RStudio",
    "section": "5.5 Mot de la fin",
    "text": "5.5 Mot de la fin\nUne fois qu’elles ont été sélectionnées, les différentes options de RStudio sont mémorisées et entrent en action dès l’ouverture de RStudio. Donc, vous pouvez fermer le logiciel RStudio et l’ouvrir de nouveau sans craindre de perdre les options sélectionnées ci-haut. Par expérience, je connais des étudiants qui n’ont jamais fermé le logiciel RStudio durant tout un semestre universitaire, soit quatre mois consécutifs, par peur de perdre la configuration de travail de RStudio. N’ayez pas cette crainte.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Options de RStudio</span>"
    ]
  },
  {
    "objectID": "RStudio_options.html#footnotes",
    "href": "RStudio_options.html#footnotes",
    "title": "5  Options de RStudio",
    "section": "",
    "text": "Prenez note que les options proposées s’inscrivent dans une démarche pédagogique et qu’au départ, il est préférable de sélectionner les options proposées. Par ailleurs, au fil de votre apprentissage, vous voudrez peut être modifier ces options. Libre à vous, à ce moment là, de sélectionner les options qui vous conviendront le mieux. Par exemple, il m’arrive fréquemment de décocher l’option Output inline afin d’avoir plus d’espace pour mes lignes de codes dans la fenêtre Source de RStudio.↩︎",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Options de RStudio</span>"
    ]
  },
  {
    "objectID": "RProject.html",
    "href": "RProject.html",
    "title": "6  Projet RStudio - niveau I",
    "section": "",
    "text": "6.1 Nouveau projet RStudio\nPuisque la démarche d’analyse de données nécessite le besoin de travailler avec plusieurs fichiers, je recommande fortement de créer un Projet RStudio. Un Projet RStudio est un répertoire sur votre ordinateur qui contient tous les fichiers nécessaires pour compléter un projet d’analyses statistiques. Cette approche permet de s’assurer que tous les fichiers (.Rmd, .txt, .dat, .csv, etc.) soient disponibles dans le même environnement de travail.\nPar expérience, je peux vous assurer que c’est une excellente idée que de créer un projet RStudio. Vous m’en remercierez bien plus tard lorsque vous verrez vos collègues, qui n’utilisent pas cette approche, chercher pendant de nombreuses minutes leurs fichiers de données sur leur disque dur ! Évidemment, ils vont blâmer R et RStudio… ou peut être même leur professeur !\nPour créer un projet RStudio, il faut ouvrir le logiciel RStudio. Dans le menu RStudio, sélectionnez File &gt; New Project… (ou cliquez sur l’icone avec un rond vert et le signe + blanc à l’intérieur superposé sur un hexagone bleu avec la lettre R à l’intérieur) (voir Figure 6.1).\nFigure 6.1: Créer un nouveau projet RStudio à partir du menu de RStudio\nDans la fenêtre qui s’ouvre (voir Figure @ref(fig:fig132)), je vous invite à sélectionner New Directory &gt; New Project &gt; Directory Name:. De cette manière, vous allez pouvoir créer votre répertoire de travail qui contiendra tous vos fichiers. Le nom du projet doit refléter la nature du travail. Sélectionnez le sous-répertoire où vous voulez créer votre projet sur le disque dur de votre ordinateur. Dans l’exemple de la Figure 6.2, j’ai nommé mon projet Projet_1 et, à partir de l’option Browse…, je l’ai placé dans le répertoire ~/Desktop/PSYC2002/Periode1. Aussi, lors de la création du projet R, je suggère de cocher la case Open in new session (voir en bas à gauche de la dernière fenêtre de la Figure 6.2).\nFigure 6.2: Créer un nouveau répertoire qui contiendra tous les fichiers associés à un projet RStudio\nUne fois le projet créé, ce dernier s’affiche dans l’en-tête de RStudio et un fichier avec l’extension .Rproj s’ajoute dans le répertoire associé à ce projet (voir Figure 6.3). Dans mon exemple, ce fichier se nomme Projet_1.Rproj et la fenêtre Files de RStudio nous indique qu’il se trouve dans le répertoire associé à ce projet.\nFigure 6.3: Fichier avec l’extension .Pproj disponible dans le répertoire associé au projet RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Projet RStudio - niveau I</span>"
    ]
  },
  {
    "objectID": "RProject.html#fermer-un-projet-rstudio",
    "href": "RProject.html#fermer-un-projet-rstudio",
    "title": "6  Projet RStudio - niveau I",
    "section": "6.2 Fermer un projet RStudio",
    "text": "6.2 Fermer un projet RStudio\nUne fois que votre projet RStudio est créé, vous pouvez le fermer en sélectionnant, dans le menu principal de RStudio, l’onglet File et sélectionner Close project dans la bande déroulante. Il est aussi possible de fermer votre projet en cliquant sur le nom de votre projet (coin supérieur droit de RStudio) et de sélectionner Close Project dans la bande déroulante (voir Figure 6.4).\n\n\n\n\n\n\n\n\nFigure 6.4: Fermeture d’un projet RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Projet RStudio - niveau I</span>"
    ]
  },
  {
    "objectID": "RProject.html#ouvrir-un-projet-rstudio",
    "href": "RProject.html#ouvrir-un-projet-rstudio",
    "title": "6  Projet RStudio - niveau I",
    "section": "6.3 Ouvrir un projet RStudio",
    "text": "6.3 Ouvrir un projet RStudio\nAu début d’une session de travail, lorsque vous désirez ouvrir un projet RStudio en particulier, rendez-vous, à l’aide du logiciel Finder (Mac) ou Explorateur de fichiers (PC) dans le répertoire qui contient ce fichier .Rproj sur votre ordinateur et cliquez sur le nom du fichier .Rproj. RStudio va ouvrir le projet et les fichiers associés.\nUne autre approche consiste à ouvrir RStudio et, dans le menu principal de RStudio, sélectionnez l’onglet File et dans la bande déroulante, sélectionnez Open Project… ou Recent Projects. Il est aussi possible d’ouvrir votre projet en cliquant sur le nom de votre projet (coin supérieur droit de RStudio) et de sélectionner Open Project… ou Recent Projects dans la bande déroulante (voir Figure 6.5).\n\n\n\n\n\n\n\n\nFigure 6.5: Ouverture d’un projet RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Projet RStudio - niveau I</span>"
    ]
  },
  {
    "objectID": "RProject.html#ouvrir-plusieurs-projets-rstudio-stimultanément",
    "href": "RProject.html#ouvrir-plusieurs-projets-rstudio-stimultanément",
    "title": "6  Projet RStudio - niveau I",
    "section": "6.4 Ouvrir plusieurs projets RStudio stimultanément",
    "text": "6.4 Ouvrir plusieurs projets RStudio stimultanément\nRégulièrement, l’analyste travaille sur plusieurs projets simultanément. Il doit donc ouvrir deux ou plusieurs projets RStudio en même temps sur son ordinateur. Après l’ouverture d’un premier projet RStudio, l’approche pour ouvrir un second projet RStudio consiste à sélectionner l’option Open Project in New Session… dans la bande déroulante (voir Figure @ref(fig:openRprojectNS)). De cette manière, l’analyste pourra se déplacer d’un projet à l’autre sans fermer le premier projet ouvert, ce qui se produirait en optant pour l’option Close Project.\n\n\n\n\n\n\n\n\nFigure 6.6: Ouverture d’un projet RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Projet RStudio - niveau I</span>"
    ]
  },
  {
    "objectID": "RProject.html#options-projet-rstudio",
    "href": "RProject.html#options-projet-rstudio",
    "title": "6  Projet RStudio - niveau I",
    "section": "6.5 Options Projet RStudio",
    "text": "6.5 Options Projet RStudio\nFinalement, voici quelques options que je vous encourage à sélectionner pour vos projets RStudio. Débutons par ouvrir la fenêtre des options associées aux projets RStudio. Dans la bande déroulante, sélectionnez l’option Project Options…, juste en bas de la liste (voir Figure 6.7).\n\n\n\n\n\n\n\n\nFigure 6.7: Ouverture d’un projet RStudio\n\n\n\n\n\n\n6.5.1 Options General\nDans l’onglet General, sélectionnez l’option No pour les deux premiers choix. Cela va réduire la durée de la fermeture de vos projets RStudio (voir Figure 6.8).\n\n\n\n\n\n\n\n\nFigure 6.8: Options générales d’un projet RStudio\n\n\n\n\n\n\n\n6.5.2 Options Spelling\nDans l’onglet Spelling, sélectionnez le dictionnaire French dans la bande déroulante du dictionnaire principal (voir la Figure 6.9). Si le dictionaire French n’est pas disponible, veuillez installer les dictionnaires additionnels en suivant la procédure présentée à la Section 5.4.\n\n\n\n\n\n\n\n\nFigure 6.9: Options du dictionnaire d’un projet RStudio",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Projet RStudio - niveau I</span>"
    ]
  },
  {
    "objectID": "RProject.html#rprojet---niveau-avancé",
    "href": "RProject.html#rprojet---niveau-avancé",
    "title": "6  Projet RStudio - niveau I",
    "section": "6.6 Rprojet - niveau avancé",
    "text": "6.6 Rprojet - niveau avancé\nLa Chapitre 8 va plus en détails dans l’organisation de la structure d’un projet RStudio. Vous êtes invités à y jeter un coup d’oeil.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Projet RStudio - niveau I</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html",
    "href": "Posit_cloud.html",
    "title": "7  Posit Cloud",
    "section": "",
    "text": "7.1 Création d’un compte\nDans ce chapitre, j’introduis l’application Posit Cloud. Posit Cloud est la version web de RStudio IDE. Elle permet :\nSi vous avez téléchargé avec succès les applications R, RStudio et Quarto sur votre ordinateur (et quelles fonctionnent correctement) et que vous n’envisagez pas de partager vos projets d’analyse avec quelqu’un d’autre (ce qui arrive rarement, soit dit en passant), vous pouvez sauter la lecture de ce chapitre.\nPar ailleurs, dans le cadre d’un cours, il est fort possible que votre professeure ou professeur exige l’utilisation de Posit Cloud. Cela facile grandement le travail de la professeure ou du professeur puisque tous les projets d’un cours sont regroupés dans le compte du professeur. Dans ce cas, veuillez suivre la démarche de création d’un compte Posit Cloud (voir la Section 7.1).\nDe plus, bien que Posit Cloud s’apparente à la version locale1 de RStudio IDE, les premiers pas avec Posit Cloud peuvent s’avérer difficiles. Dans le présent chapitre, je soulève quelques éléments importants afin de maximiser l’expérience d’utilisation de Posit Cloud.\nLa première étape consiste à créer un compte gratuit (Free) sur le site web de Posit Cloud et cliquez sur GET STARTED (voir Figure 7.1).\nPar ailleurs, notez que l’utilisateur atteint très rapidement les limites d’utilisation du plan gratuit de Posit Cloud — sauf si le compte s’inscrit à l’intérieur d’un cours. Dans l’optique où l’utilisateur (i) dépasse le nombre de projets ou d’espaces de travail admissibles, (ii) dépasse le nombre d’heures par projet disponibles, ou (iii) qu’il désire augmenter la mémoire RAM et la vitesse d’exécution des codes, le plan Premium de Posit Cloud s’avère une alternative intéressante, mais relativement dispendieuse2.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#sec-comptegratuit",
    "href": "Posit_cloud.html#sec-comptegratuit",
    "title": "7  Posit Cloud",
    "section": "",
    "text": "Figure 7.1: Get started\n\n\n\n\n7.1.1 Compte gratuit\nVoici la démarche à suivre pour créer un compte gratuit. Cette démarche est la même que le compte soit créé à titre personnel ou pour le cadre d’un cours.\n\n\n\n\n\n\nCréation d’un compte gratuit sur Posit Cloud\n\n\n\n\n\n\nDans un premier temps, cliquez sur All Plans.\n\n\n\n\n\n\n\nFigure 7.2: Tous les plans d’abonnement de Posit Cloud\n\n\n\n\nEnsuite, cliquez sur Free.\n\n\n\n\n\n\n\nFigure 7.3: Plan d’abonnement gratuit de Posit Cloud\n\n\n\n\nEt finalement, indiquez votre adresse électronique — pour les étudiantes et étudiants qui suivent un cours spécifique en utilisant Posit Cloud, utilisez le couriel de votre université — et cliquez sur sign up.\n\n\n\n\n\n\n\nFigure 7.4: Inscription sur Posit Cloud",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#compte-cloud-instructor",
    "href": "Posit_cloud.html#compte-cloud-instructor",
    "title": "7  Posit Cloud",
    "section": "7.2 Compte Cloud Instructor",
    "text": "7.2 Compte Cloud Instructor\nDans le cadre d’un cours universitaire ou collégial, je recommande fortement l’utilisation d’un compte Cloud Instructor pour la professeure ou le professeur. Ce compte permet au professeur d’héberger tous les projets de ses étudiantes et étudiants dans un espace de travail (spaces) dédié à un cours spécifique. Le coût monétaire ($$$) — pour le professeur et les étudiante et étudiants — est très faible et facilite grandement le travail du professeur.\nLe partage de projets RStudio (voir la Section 7.4) via un espace de travail partagé (voir la Section 7.3) peut se faire via une invitation individuelle ou via un lien de partage. De plus, la professeure ou le professeur peut créer des devoirs (assignments) qui sont copiés automatiquement lorsque l’étudiant ouvre le lien de partage. Les étudiantes et étudiants peuvent par la suite modifier le ou les fichiers qui se trouvent dans cet espace de travail et la professeure ou le professeur a accès en temps réel aux travaux individuels de chaque étudiante ou étudiant.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#sec-espace",
    "href": "Posit_cloud.html#sec-espace",
    "title": "7  Posit Cloud",
    "section": "7.3 Espaces de travail",
    "text": "7.3 Espaces de travail\nPosit Cloud possède la capacité de regrouper plusieurs projets RStudio à l’intérieur d’un même espace de travail. Dans Posit Cloud, ces environnements se nomment Spaces. Cette caractéristique permet :\n\nde regrouper tous vos projets RStudio associés au même thème (ex: un cours universitaire, une formation, une étude scientifique, etc.) à l’intérieur d’un même environnement\nde partager un espace de travail avec d’autres personnes, comme un professeur avec ses étudiants.\n\nAfin d’atteindre ces objectifs, Posit Cloud divise l’espace de travail en deux catégories d’espace :\n\nles espaces de travail individuels\nles espaces de travail partagés3.\n\n\n7.3.1 Espace individuel\nL’espace de travail individuel (voir l’icone avec 1 personnage à l’intérieur) se trouve dans l’onglet Your Workspace sous l’en-tête Spaces à la gauche de Posit Cloud (voir Figure 7.5). Par défaut, les projets RStudio qui sont créés à l’intérieur de cet espace de travail individuel ne sont disponibles et visibles qu’à l’utilisateur du compte. Cependant, il est possible de rendre disponibles les projets de cet espace individuel afin qu’ils soient consultés et copiés par d’autres utilisateurs de Posit Cloud (si cela vous intéresse, veuillez cliquer ici).\n\n\n\n\n\n\n\n\nFigure 7.5: Espace de travail individuel de Posit Cloud\n\n\n\n\n\nPersonnellement, j’utilise rarement l’espace de travail individuel. Je préfère regrouper mes projets RStudio à l’intérieur de thèmes spécifiques (cours, projets de recherche, etc.) à l’aide d’espace de travail partagé (voir Section 7.3.2). De plus, puisque l’utilité première de Posit Cloud est de favoriser le travail collaboratif, je ne discute pas plus longuement de l’espace de travail individuel. Je considère qu’une gestion responsable des espaces partagés permet d’obtenir le même niveau de confidentialité que l’espace de travail individuel.\n\n\n7.3.2 Espaces partagés\nPosit Cloud permet de regrouper et de partager avec d’autres utilisateurs des projets RStudio dans le même espace de travail. Les projets RStudio qui sont intégrés à l’intérieur d’un espace de travail partagé doivent obligatoirement avoir un thème commun. Par exemple, je peux regrouper les exercices d’un même cours dans un espace de travail partagé ou regrouper les projets associés à mes travaux de recherche sur une thématique spécifique. Bref, avant de créer un espace de travail partagé, il faut cibler le dénominateur commun aux projets qui y seront regroupés. Dans le cadre d’un cours, par exemple, un professeur peut créer un espace de travail partagé avec tous ces étudiants pour un exercice particulier. Cela lui permet d’avoir accès à tous les travaux effectués dans le cadre de cet exercice4.\n\n\n\n\n\n\nExemple - Espace de travail partagé\n\n\n\n\n\nÀ titre d’exemple, la Figure 7.6 montre — voir la colonne de gauche — que j’ai créé un espace de travail partagé (voir l’icone avec 3 personnages à l’intérieur) du nom de PSYC2002 - Hiver 2025. Si désiré, je pourrais créer un nouvel espace de travail partagé en cliquant sur + New Space. Personnellement, tous mes espaces de travail dans Posit Cloud sont de nature partagée. Cette façon de faire me permet, si désiré, de rendre disponibles plusieurs projets à plusieurs personnes, et ce, très rapidement.\n\n\n\n\n\n\n\n\nFigure 7.6: Illustration de la fenêtre d’ouverture de Posit Cloud\n\n\n\n\n\n\n\n\n\n\n7.3.3 Partager un espace de travail dans Posit Cloud\nL’un des avantages de Posit Cloud est la possibilité de partager des projets RStudio avec plusieurs utilisateurs sans avoir à télécharger le projet. Tous les utilisateurs ont accès à tous les projets d’un espace de travail via Posit Cloud. Par exemple, les membres d’une même équipe de recherche peuvent contribuer sur un même projet d’analyse statistique ou un étudiant peut partager son projet avec son professeur. Par ailleurs, il est important de noter que l’administrateur de l’espace de travail (ex : professeur) peut restreindre le nombre de projets partagés avec tel ou tel contributeur (ex: étudiant).\n\n\n\n\n\n\nExemple - Procédure de création d’un espace de travail partagé\n\n\n\n\n\nLe partage d’un espace de travail dans Posit Cloud s’effectue à partir de l’espace de travail partagé (dans Spaces). Afin de partager votre espace de travail partagé, vous devez ajouter des membres. Sur la page d’ouverture de Posit Cloud, cliquez sur le nom de l’espace de travail que vous désirez partager. Au haut de l’écran, cliquez sur Members. La liste des membres de l’environnement de travail sera affichée (voir la Figure 7.7). Par la suite, cliquez sur l’option Add Member pour inviter de nouveaux membres. Lors de l’invitation, vous devrez fournir une adresse courriel et préciser le rôle du nouveau membre (Admin, Moderator, Contributor, Viewer). Par défaut, le choix Contributor est offert et, à moins de raisons valables, ce choix demeure la meilleure option. De plus, en tant qu’administrateur de cet environnement de travail, vous pouvez déterminer les privilèges que vous désirez accorder à chaque membre que vous invitez (voir l’encadré pointillé à la droite de la Figure 7.7).\n\n\n\n\n\n\n\n\nFigure 7.7: Ajouter des membres à un espace de travail Posit Cloud\n\n\n\n\n\n\n\n\n\n\n7.3.4 Effacer un espace de travail\n\n\n\n\n\n\nExemple - Effacer un espace de travail\n\n\n\n\n\nSi vous désirez effacer un espace travail de votre compte Posit Cloud, cliquez sur le nom de votre espace de travail et ensuite cliquez sur l’icone avec les trois petits points à l’horizontal situé près de votre nom en haut à droite de la page web de Posit Cloud. Finalement, sélectionnez l’option Delete Sapce dans la bande déroulante (voir la Figure 7.8).\n\n\n\n\n\n\n\n\nFigure 7.8: Effacer un espace de travail à partir de Posit Cloud",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#sec-projets",
    "href": "Posit_cloud.html#sec-projets",
    "title": "7  Posit Cloud",
    "section": "7.4 Projets",
    "text": "7.4 Projets\nRStudio oblige l’utilisateur à créer un projet RStudio, ce qui, à mon avis, est une très bonne chose 5. À titre de rappel (voir le Chapitre 6), un projet RStudio permet de regrouper tous les fichiers (données, analyses, figures, etc.) liés à un projet d’analyse statistique.\n\n7.4.1 Créer un nouveau projet\n\n\n\n\n\n\nExemple - Création d’un nouveau projet\n\n\n\n\n\nPour créer un nouveau projet, il suffit de cliquer sur la flèche (∨) de l’onglet New Project (voir à droite de la Figure 7.9) et, dans la bande déroulante, de sélectionner l’option New RStudio Project. Pendant quelques secondes, le message Deploying Project apparaît et, ensuite, votre nouveau projet s’ouvre dans Posit Cloud.\n\n\n\n\n\n\n\n\nFigure 7.9: Création d’un nouveau projet dans Posit Cloud\n\n\n\n\n\n\n\n\n\n\n7.4.2 Gabarits (Templates)\nVous aurez probablement remarqué qu’il est possible de créer un nouveau projet à partir d’un gabarit (Template). Par défaut, quelques gabarits sont disponibles mais, honnêtement, ne perdez pas votre temps avec ces gabarits (s’ils sont disponibles). Il est préférable de construire son projet RStudio à partir d’un document neuf ou d’un projet que vous avez déjà utilisé.\nNéanmoins, dans le cadre d’un cours, le professeur peut créer un gabarit qui sert de base pour la construction d’un exercice particulier, incluant les extensions R nécessaires à sa réalisation. Dans ce cas là, l’utilisation du gabarit est recommandée. Si cela se produit, le gabarit sera répliqué dans votre compte sur Posit Cloud et vous pourrez le modifier à volonté comme si c’était votre propre projet.\n\n\n7.4.3 Devoirs (Assignments)\nDans le cadre d’un cours, un professeur peut créer un projet RStudio qui contient tous les fichiers (données, explications, solution) nécessaires à la réalisation d’un exercice — devoir — spécifique. Si le professeur produit un devoir (assignment) dans Posit Cloud, vous recevrez un lien par courriel (ou autre moyen de communication électronique utilisé par le professeur). Il suffit de cliquer sur le lien et d’ouvrir votre compte Posit Cloud.\nDans la page d’ouverture de l’espace de travail partagé avec votre professeur, vous verrez un projet avec un icone bleu du nom de Start (voir la Figure 7.10). Cliquez sur cette icone pour dupliquer le projet du professeur.\n\n\n\n\n\n\nFigure 7.10: Icone Start pour un nouveau devoir\n\n\n\n\n\n\n\n\n\nExemple - Devoir partagé\n\n\n\n\n\nUne fois que le projet du devoir est dupliqué, vous pouvez l’utiliser puisqu’il vous appartient. De plus, le professeur peut avoir accès à votre projet RStudio directement dans son propre compte et ce, en temps réel. Si vous quittez l’espace de travail partagé avec le projet, à votre retour, les projets dupliqués possèdent une icone Continue (voir la Figure 7.11). Il suffit de cliquez sur cet icone pour avoir accès à votre projet partagé avec votre professeur.\n\n\n\n\n\n\nFigure 7.11: Icone Continue\n\n\n\n\n\n\n\n\n7.4.4 Renommer le nouveau projet\nÀ l’ouverture d’un nouveau projet (voir Figure 7.12), Posit Cloud attribue le nom Untitled Project au nouveau projet. Le nom du projet est disponible tout au haut de l’écran et il est possible de voir dans quel espace de travail le projet est inséré. Dans la Figure 7.12, l’expression Exercices / indique que le nouveau projet est inséré à l’intérieur de l’espace de travail partagé nommé Exercices.\n\n\n\n\n\n\n\n\nFigure 7.12: Untitled project dans Posit Cloud\n\n\n\n\n\n\n\n\n\n\n\nExemple - Procédure de changement de nom\n\n\n\n\n\nPour changer le nom, il faut cliquer sur Untitled Project (en haut à gauche de la fenêtre) et inscrire le nouveau nom de votre projet (Figure 7.13). À titre de démonstration, j’ai créé un nouveau projet du nom de Exercice2.\n\n\n\n\n\n\n\n\nFigure 7.13: Modifier le nom d’un nouveau projet dans Posit Cloud\n\n\n\n\n\n\n\n\n\n\n7.4.5 Importer des fichiers dans un projet\nHabituellement, l’analyste importe un ou des fichiers de données (.xlsx, .dat, .txt, .csv, etc.) dans RStudio pour ensuite l’analyser à l’aide d’un script R ou d’un script R Markdown. Avec la version locale de RStudio IDE, l’analyste n’a qu’à copier son fichier dans le répertoire qui contient son projet RStudio. Avec Posit Cloud, l’approche est différente. À partir du projet RStudio, il faut importer le fichier de données dans l’espace cloud dédié à ce projet sur le serveur de RStudio.\n\n\n\n\n\n\nExemple - Importation de fichiers dans Posit Cloud\n\n\n\n\n\nVoici un exemple. Dans la fenêtre Files de RStudio, nous pouvons voir que le projet RStudio (project.Rproj) est inséré dans le dossier Cloud &gt; Project (voir Figure 7.14).\n\nNous pouvons importer un fichier de données dans ce dossier en cliquant sur l’onglet Upload.\nUne fenêtre s’ouvre et il faut simplement cliquer sur Choisir le fichier sous l’en-tête File to upload. Dans mon exemple, le fichier que je désire importé se nomme RatLives.csv6. Il est possible d’importer plusieurs fichiers simultanément. Ceux-ci, cependant, doivent être regroupés, au préalable, à l’intérieur d’un fichier .zip.\nAprès l’importation, le fichier (RatLives.csv) est disponible dans le projet Posit Cloud.\n\n\n\n\n\n\n\n\n\nFigure 7.14: Importer un fichier dans un projet Posit Cloud\n\n\n\n\n\n\n\n\n\n\n7.4.6 Examiner la liste des projets\nIl est possible d’obtenir la liste de tous les projets d’un même espace de travail. Pour cela, il faut cliquer sur le nom de l’espace de travail que vous désirez consulter. Par défaut, l’onglet All Content est activé (Figure 7.11) et les projets disponibles dans l’espace de travail sont affichés. Pour ouvrir le projet qui vous intéresse, vous n’avez qu’à cliquer sur son nom.\n\n\n7.4.7 Exporter un projet Posit Cloud\nL’exportation d’un projet Posit Cloud sert principalement deux objectifs :\n\nL’exportation permet de sauvegarder une copie de votre projet sur votre ordinateur.\nL’exportation facilite grandement le partage des projets RStudio entre les utilisateurs7.\n\n\n\n\n\n\n\nExemple 1 - Exportation d’un projet RStudio à partir de la liste d’un espace de travail dans Posit Cloud\n\n\n\n\n\nLorsque la liste des projets d’un espace de travail de Posit Cloud est affichée à l’écran, vous pouvez facilement exporter l’un des projets sur votre ordinateur et le partager. Il suffit de cliquer sur l’option Export, laquelle est située à la l’extrême droite du nom du projet dans la liste (voir la flèche qui pointe vers le bas dans la Figure 7.15). Après avoir cliquer sur l’option Export, une première fenêtre s’ouvre et génère le dossier d’exportation du projet. Ensuite, une seconde fenêtre apparaît et il faut cliquer sur Download pour télécharger le dossier complet (voir la Figure 7.15).\n\n\n\n\n\n\n\n\nFigure 7.15: Exportation d’un projet à partir de la liste des projets dans un espace de travail de Posit Cloud\n\n\n\n\n\nPar défaut, le projet est téléchargé dans le répertoire (ou dossier) de téléchargement de votre ordinateur. Il conserve exactement la même structure que votre dossier dans Posit Cloud. Vous pouvez donc l’ouvrir avec la version locale de RStudio IDE sur votre ordinateur et avoir accès à tous les fichiers. Prenez note que lors du téléchargement, le dossier de téléchargement se voit attribuer un nom arbitraire composé de 7 chiffres. Si vous téléchargez à plusieurs reprises le même projet, le nom à 7 chiffres demeure le même d’un téléchargement à l’autre.\n\n\n\n\n\n\n\n\n\nExemple 2 - Exportation d’un projet RStudio directement à partir du projet\n\n\n\n\n\nAu lieu d’exporter le projet RStudio à partir de la liste des projets qui composent un espace de travail dans Posit Cloud, il est possible de l’exporter directement à partir du projet. Donc, une fois que le projet est ouvert dans RStudio, à partir de la fenêtre Files, il faut cocher la case située à la gauche du nuage Cloud &gt; project. À ce moment, tous les fichiers sont cochés. Par la suite, il faut appuyer sur l’onglet More et choisir Export.... Par la suite, la démarche est semblable à celle de la ?fig-figexport.\n\n\n\nExportation d’un projet RStudio à partir d’un projet\n\n\n\n\n\n\n\n7.4.8 Partager un projet dans Posit Cloud\nL’un des avantages de Posit Cloud est la possibilité de partager des projets RStudio avec plusieurs utilisateurs sans avoir à télécharger le projet. Tous les utilisateurs ont accès au même projet via Posit Cloud. Par exemple, les membres d’une même équipe de recherche peuvent contribuer sur un même projet d’analyse statistique ou un étudiant peut partager son projet avec son professeur.\n\n\n\n\n\n\nExemple - Partage d’un projet RStudio avec Posit Cloud\n\n\n\n\n\nLe partage d’un projet Posit Cloud s’effectue à partir de la liste des projets qui composent un espace de travail. Il faut appuyer sur les trois points à l’horizontal situés à l’extrème droite du nom d’un projet dans la liste et de sélectionner l’option Share Link.\n\n\n\n\n\n\n\n\nFigure 7.16: Ajouter des membres à un espace de travail Posit Cloud\n\n\n\n\n\n\n\n\n\n7.4.8.1 Accessibilité\nLors du partage d’un projet, vous pouvez restreindre l’accessibilité de votre projet. Ainsi, même si vous partagez un espace de travail avec 20 autres utilisateurs, vous pouvez limiter l’accès de votre projet aux administrateurs et aux modérateurs de l’environnement de travail.\n\n\n\n\n\n\nExemple - Accessibilité\n\n\n\n\n\n\nPour vous assurez que cette option soit activée pour un projet en particulier, ouvrez l’espace de travail qui contient le projet auquel vous désirez restreindre l’accès. Cliquez sur les trois points à l’horizontal à l’extrême droite du nom du projet et sélectionnez Settings (voir Figure 7.17).\n\n\n\n\n\n\n\n\n\nFigure 7.17: Contrôler l’accessibilité à un projet Posit Cloud\n\n\n\n\n\n\nPar la suite, cliquez sur access et sélectionner l’option désiré dans la bande déroulante sous GENERAL ACCESS (voir Figure 7.18).\n\n\n\n\n\n\n\n\n\nFigure 7.18: Contrôler l’accessibilité à un projet Posit Cloud\n\n\n\n\n\n\n\n\n\n\n\n7.4.9 Effacer un projet\nSi vous désirez effacer un projet de votre compte Posit Cloud, deux possibilités s’offrent à vous.\n\n\n\n\n\n\nExemple - Solution 1\n\n\n\n\n\n\nDans la liste des projets associés à un espace de travail spécifique, cliquez sur la poubelle située à l’extrème droite du nom du projet (voir la Figure 7.19).\n\n\n\n\n\n\n\n\n\nFigure 7.19: Effacer un projet à partir de Posit Cloud\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExemple - Solution 2\n\n\n\n\n\n\nLorsque le projet est déjà ouvert dans Posit Cloud, vous pouvez cliquer sur l’icone avec les trois petits points à l’horizontal situé près de votre nom en haut à droite de la page web de Posit Cloud. Ensuite, sélectionnez l’option Move to Trash dans la bande déroulante (voir la Figure 7.20).\n\n\n\n\n\n\n\n\n\nFigure 7.20: Effacer un projet à partir de Posit Cloud",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#options-de-posit-cloud",
    "href": "Posit_cloud.html#options-de-posit-cloud",
    "title": "7  Posit Cloud",
    "section": "7.5 Options de Posit Cloud",
    "text": "7.5 Options de Posit Cloud\nTout comme la version locale de RStudio IDE, tel que montré à la Chapitre 5, il est possible de modifier les options de Posit Cloud. Prenez note, cependant, qu’il faut modifier les options pour chacun des projets que vous créez — ce qui n’est pas le cas avec la version locale de RStudio. Cela est nécessaire puisque pour chaque projet, Posit Cloud produit un espace de travail dans lequel les projets sont tous indépendants les uns des autres.",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#consulter-votre-compte",
    "href": "Posit_cloud.html#consulter-votre-compte",
    "title": "7  Posit Cloud",
    "section": "7.6 Consulter votre compte",
    "text": "7.6 Consulter votre compte\n\n\n\n\n\n\nExemple - Consulter votre compte\n\n\n\n\n\nVous pouvez consulter les paramètres d’utilisation de votre compte Posit Cloud en cliquant sur votre nom. Vous y verrez quelques statistiques, comme le nombre de projets et le nombre d’heures d’utilisation pour un mois (voir la Figure 7.21). Cela est particulièrement important si votre compte d’utilisateur est gratuit.\n\n\n\n\n\n\n\n\nFigure 7.21: Paramètres du compte de l’utilisateur",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#quitter-posit-cloud",
    "href": "Posit_cloud.html#quitter-posit-cloud",
    "title": "7  Posit Cloud",
    "section": "7.7 Quitter Posit Cloud",
    "text": "7.7 Quitter Posit Cloud\nPour quitter Posit Cloud, n’oubliez pas de cliquez l’option Log Out après avoir cliquer sur votre nom (voir la Figure 7.21).",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "Posit_cloud.html#footnotes",
    "href": "Posit_cloud.html#footnotes",
    "title": "7  Posit Cloud",
    "section": "",
    "text": "L’expression version locale désigne la version de RStudio téléchargée et installée sur un ordinateur (et non dans le nuage, comme Posit Cloud).↩︎\nCela est d’autant plus vrai que la version locale de RStudio IDE est, elle, disponible gratuitement.↩︎\nLes espaces de travail individuels sont illustrés par une icone avec une personne et les espaces de travail partagés sont illustrés par des icones avec trois personnes.↩︎\nPosit Cloud a d’ailleurs été conçu, en partie, pour répondre à ce besoin lors de l’enseignement de R et de RStudio.↩︎\nSi vous n’êtes pas familier avec les projets RStudio, je vous invite à consulter la Chapitre 6.↩︎\nCe fichier provient des fichiers de données qui accompagnent le livre de John Kruschke, Doing Bayesian Data Analysis.↩︎\nSi vous ne désirez pas utiliser la fonction share de Posit Cloud.↩︎",
    "crumbs": [
      "Partie I",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Posit Cloud</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html",
    "href": "RProject_avance.html",
    "title": "8  Project RStudio - niveau II",
    "section": "",
    "text": "8.1 Sous-répertoires\nDans le Chapitre @ref(projetRStudio), nous avons vu brièvement comment créer un projet R de manière à y regrouper l’ensemble des fichiers associés à un projet d’analyse de données. Malheureusement, l’approche présentée au Chapitre @ref(projetRStudio) n’est valide que lorsque le nombre de fichiers utilisés est petit et qu’il est possible de placer tous nos fichiers à l’intérieur du même répertoire. Par contre, lorsque le nombre de fichiers de données et/ou d’analyse devient trop grand, il est préférable d’utiliser une meilleure organisation de notre projet R. Cela permet, entre autres, de regrouper les différents types de fichiers ensembles. Dans le présent chapitre, nous avons examiner comment organiser adéquatement le répertoire (aussi nommé “dossier” ou “folder” en anglais) qui contient votre fichier .Rproj sur votre ordinateur. De cette façon, vos données, fichiers d’analyses et résultats seront toujours organisés de manière cohérente sur votre ordinateur dans le répertoire qui contient le projet R.\nÀ titre de rappel, immédiatement après la création d’un nouveau projet R dans un nouveau répertoire, un seul fichier compose ce répertoire. Dans notre exemple du Chapitre @ref(projetRStudio), seul le fichier Projet_1.Rproj faisait partie de ce répertoire (voir Figure @ref(fig:figrp2)).\nIdéalement, le répertoire qui contient le projet R doit être divisé en sous-répertoires. La Figure @ref(fig:structure) montre l’organisation de base d’un répertoire qui contient un projet R. Je suggère la création de quatre sous-répertoires principaux : Data, Output, R et Rmd. L’appellation anglophone permet d’arrimer l’utilisation de RStudio avec d’autres outils, comme GitHub. Évidemment, vous pouvez les modifier et les nommer à votre goût en leur donnant un nom en français, comme Données, Résultats, R et Rmd. Personnellement, j’évite d’utiliser les accents dans la création des répertoires et les objets R. Cela peut compliquer bien des choses lorsque l’on partage nos fichiers avec des collègues qui n’utilisent pas l’encodage de type UFT-8.\nOrganisation des sous-répertoires d’un projet R",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#description-des-sous-répertoires",
    "href": "RProject_avance.html#description-des-sous-répertoires",
    "title": "8  Project RStudio - niveau II",
    "section": "8.2 Description des sous-répertoires",
    "text": "8.2 Description des sous-répertoires\n\nData\n\n\nLe sous-répertoire Data est divisée en deux sous-répertoires : Raw et Transformed. Le sous-répertoire Raw contient le fichier des données brutes, soit les données initialement récoltées par le chercheur ou l’analyste, comme un fichier Excel. Le sous-répertoire Transformed contient, quant à lui, les fichiers de données transformés par l’analyste à partir de ses scripts .R ou .Rmd. Par exemple, il arrive fréquemment que l’analyste ajoute des variables au fichier de données initiales. Donc, au lieu de travailler avec le donnée original, il en crée un nouveau qu’il sauvegarde dans le répertoire Transformed.\n\n\nOutput\n\n\nLe sous-répertoire Output contient le document final produit par l’analyse. Par exemple, ce répertoire contient les fichiers .pdf et/ou les fichiers .docs qui sont associées aux analyses produites par l’analyste. Il comprend aussi les fichiers associés aux Figures qui seront utilisées dans les différentes publications associées au projet.\n\n\nR et Rmd\n\n\nFinalement, les sous-répertoires R et Rmd contiennent, respectivement, les fichiers .R et .Rmd (avec l’écriture R Markdown, comme les fichiers R Notebook). En résumé, ce sont les fichiers qui contiennent tous les codes R et R Markdown nécessaires pour transformer les données, réaliser les analyses et les figures, et publier les rapports finaux.",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#avantages-et-désavantages",
    "href": "RProject_avance.html#avantages-et-désavantages",
    "title": "8  Project RStudio - niveau II",
    "section": "8.3 Avantages et désavantages",
    "text": "8.3 Avantages et désavantages\nPlusieurs raisons militent pour cette sous-division :\n\nNous pouvons regrouper les fichiers de même nature dans le même sous-répertoire (ex : fichiers de données).\nEn utilisant une structure semblable d’un projet R à l’autre, l’analyste peut facilement importer et exporter des fichiers de données sans craindre de ne pas savoir où les retrouver.\nLors du partage du projet R, il est facile pour un collaborateur de retrouver toutes les informations à partir du nom des sous-répertoires.\n\nPar ailleurs, l’utilisation de sous-répertoires produit quelques inconvénients :\n\nLors de l’importation et de l’exportation des fichiers de données, il faut ajouter l’extension du sous-répertoire associé au répertoire Data1.\nParfois, dans notre empressement de créer une nouvelle analyse, nous oublions de déplacer le fichier dans le bon répertoire (R ou Rmd).\nL’ajout de multiples sous-répertoires peut complexifier la navigation à l’intérieur du projet R. Il est donc recommandé de limiter les sous-répertoires à deux niveaux (ex : Data / Raw).",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#comment-créer-les-sous-répertoires",
    "href": "RProject_avance.html#comment-créer-les-sous-répertoires",
    "title": "8  Project RStudio - niveau II",
    "section": "8.4 Comment créer les sous-répertoires",
    "text": "8.4 Comment créer les sous-répertoires\nBien que vous pouvez créer les sous-répertoires à partir de logiciels déjà disponibles par défaut avec votre ordinateur2, je recommande d’utiliser le logiciel RStudio pour cela. Dans le fenêtre des utilitaires (Files, Plots, Packages, Help, Viewer), l’onglet Files contient, entre autres, tous les outils nécessaires pour créer, effacer et renommer les sous-répertoires. Cette approche réplique d’ailleurs celle qui doit être utilisée avec RStudio Cloud.\nAvant de débuter à créer de nouveaux sous-répertoires, il faut s’assurer que la fenêtre Files présente les fichiers disponibles dans le répertoire principal de votre projet R. Si le nom du fichier de votre projet R est visible (fichier .Rproj), vous êtes à la bonne place (voir Figure @ref(fig:figrp2)) ! Sinon, naviguez à l’intérieur des répertoires situés à la droite de Home pour retrouver votre fichier .Rproj. Par la suite, l’onglet New Folder vous permet de créer les sous-répertoires. Pour effacer ou renommer un sous-répertoire, il faut cocher la case située à sa gauche et cliquer sur l’onglet Delete ou Rename. De plus, l’onglet More comprend d’autres options intéressantes comme le déplacement des fichiers d’un répertoire à l’autre ou la possibilité de copier les fichiers dans de nouveaux répertoires.",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#exemple",
    "href": "RProject_avance.html#exemple",
    "title": "8  Project RStudio - niveau II",
    "section": "8.5 Exemple",
    "text": "8.5 Exemple\nÀ titre d’exemple, j’ai créé les sous-répertoires dans le répertoire principal de mon projet R (Projet_1) et j’ai déplacé dans le sous-répertoire les fichiers .Rmd et .nb.html que nous avons créé à la section @ref(deuxfichiers). À l’aide du logiciel Finder de mon ordinateur (Mac), nous pouvons voir l’organisation des sous-répertoires (voir Figure @ref(fig:Files2)).\n\n\n\n\n\nSous-répertoires du projet Projet_1.Rproj sur mon ordinateur",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#répertoire-du-projet",
    "href": "RProject_avance.html#répertoire-du-projet",
    "title": "8  Project RStudio - niveau II",
    "section": "8.6 Répertoire du projet",
    "text": "8.6 Répertoire du projet\nAprès avoir créer nos répertoires dans notre projet RStudio, pour chacun des fichiers .Rmd que nous créons, il faut indiquer à RStudio d’utiliser le répertoire principal de notre projet RStudio. Par défaut, R utilise le répertoire Document de votre ordinateur et non celui du projet. Il faut donc changer le répertoire Document par le répertoire du projet RStudio. La démarche consiste simplement à cliquer sur l’onglet Knit, au haut de la fenêtre Source de RStudio, de sélectionner Directory et ensuite Project Directory (voir Figure @ref(fig:project-directory)).\n\n\n\n\n\nSélectionner le répertoire du projet RStudio à partir de l’option Knit",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#chemins-daccès-relatifs",
    "href": "RProject_avance.html#chemins-daccès-relatifs",
    "title": "8  Project RStudio - niveau II",
    "section": "8.7 Chemins d’accès relatifs",
    "text": "8.7 Chemins d’accès relatifs\nEn indiquant à RStudio d’utiliser le répertoire du projet RStudio comme répertoire principal, il est possible d’utiliser des chemins d’accès relatifs dans nos codes R pour préciser les répertoires où il faut importer et/ou exporter nos fichiers sur notre ordinateur. Un chemin d’accès relatif est un chemin (path, en anglais) qui précise le répertoire où se trouve nos fichiers sur notre ordinateur relativement au répertoire principal du projet RStudio.\n\n\n\n\n\nChemin relatif du fichier oranges.txt à partir du répertoire du projet RStudio\n\n\n\n\nDans l’exemple de la Figure @ref(fig:Files2), le répertoire principal du projet RStudio est Projet_1. Donc, tous les chemins relatifs précisés dans nos codes R doivent prendre le répertoire Projet_1 comme point de départ. Ainsi, le chemin relatif pour le fichier oranges.txt qui se trouve dans le répertoire Raw (voir Figure @ref(fig:chemin-relatif2) aurait la forme suivante :\n\\[\n./Data/Raw/oranges.txt\n\\]\nNotez la présence du . qui désigne le répertoire principal du projet RStudio.\n\n8.7.1 Importation de fichiers\nLa Figure @ref(fig:import-data) montre le chemin d’accès relatif (./Data/Raw/) pour importer le fichier de données oranges.txt à partir d’un bloc de codes R.\n\n\n\n\n\nChemin relatif pour l’importation du fichier oranges.txt dans un bloc de codes R\n\n\n\n\n\n\n8.7.2 Exportation de fichiers\nLa Figure @ref(fig:export-data) montre le chemin d’accès relatif (./Data/Transformed/) pour exporter (et sauvegarder) le fichier de données oranges-transformed.txt à partir d’un bloc de codes R. Dans le premier bloc de codes, les mesures métriques de l’âge et de la circonférences des arbres ont été transformées en mesures anglaises. Dans le second bloc de codes, le fichier oranges-transformed a été sauvegardé en format .txt.\n\n\n\n\n\nChemin relatif pour l’exportation du fichier oranges-transformed.txt dans un bloc de codes R\n\n\n\n\nLa Figure @ref(fig:chemin-relatif-transformed) nous confirme que le fichier oranges-transformed.txt a bel et bien été exporté dans le répertoire /Data/Transformed/ du Projet_1.\n\n\n\n\n\nConfirmation de l’exportation du fichier oranges-transformed.txt",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#recommandation",
    "href": "RProject_avance.html#recommandation",
    "title": "8  Project RStudio - niveau II",
    "section": "8.8 Recommandation",
    "text": "8.8 Recommandation\nLorsque nous travaillons sur un projet d’analyse de données, il est facile de devenir mélangé dans les différentes versions de nos analyses et avec les différents fichiers qui contiennent les données transformées. La meilleure façon d’éviter la confusion consiste à bien organiser votre espace de travail pour chacun des projets R que vous allez entreprendre. Et la meilleure façon consiste à créer la même structure que celle présentée ci-haut pour chacun de vos projets R.\nNéanmoins, prenez note que cette proposition de structure de projet R est minimale. Si vous le désirez, vous pouvez créer autant de sous-répertoires que vous le désirez. Par exemple, le sous-répertoire Rmd pourrait comprendre les sous-répertoires Analyse-1, Analyse-2, Analyse-3, etc. Bref, avec la pratique, vous serez en mesure de préciser la structure d’un projet R qui vous convient le mieux. Malgré tout, gardez en tête de limiter le nombre de sous-répertoires. Parfois, trop, c’est comme pas assez !",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#exercice-7",
    "href": "RProject_avance.html#exercice-7",
    "title": "8  Project RStudio - niveau II",
    "section": "8.9 Exercice 7",
    "text": "8.9 Exercice 7\nL’objectif de l’Exercice 7 consiste à organiser votre projet R. En résumé, vous devez créer les sous-répertoires présentés ci-haut et déplacer les fichiers correspondants dans les bons sous-répertoires. À partir du fichier Exercice R Notebook que vous avez complété lors de l’Exercice 6, veuillez :\n\nCréer les sous-répertoires Data, Output, R et Rmd.\nDans le répertoire Data, créer les sous-répertoires Raw et Transformed.\nDéplacer les fichiers Exercice Notebook.Rmd et Exercice Notebook.nb.html dans le sous-répertoire Rmd.",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#solution",
    "href": "RProject_avance.html#solution",
    "title": "8  Project RStudio - niveau II",
    "section": "8.10 Solution",
    "text": "8.10 Solution\nLa structure de votre projet R (dans l’onglet Projet_1) devrait ressembler à celui de la Figure @ref(fig:Files3).\n\n\n\n\n\nÀ la fin de l’Exercice 7, vos sous-répertoires de votre projet R devraient ressembler à ceci\n\n\n\n\nDe plus, votre répertoire Data devraient comprendre les sous-répertoires illustrés à la Figure @ref(fig:Files4) et votre répertoire Rmd devraient comprendre les fichiers présentés à la Figure @ref(fig:Files5).\n\n\n\n\n\nÀ la fin de l’Exercice 7, les sous-répertoires du répertoire Data devraient ressembler à ceci\n\n\n\n\n\n\n\n\n\nÀ la fin de l’Exercice 7, le répertoire Rmd devraient comprendre ceux deux fichiers",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "RProject_avance.html#footnotes",
    "href": "RProject_avance.html#footnotes",
    "title": "8  Project RStudio - niveau II",
    "section": "",
    "text": "Par exemple, l’importation et l’exportation des fichiers de données nécessitent l’obligation d’ajouter le chemin d’accès relatif au répertoire du projet RStudio.↩︎\nAvec un Mac, vous pouvez créer les sous-répertoires à partir du logiciel Finder. Avec un PC, vous pouvez créer les sous-répertoires à partir du logiciel Explorateur de fichiers.↩︎",
    "crumbs": [
      "Partie III",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Project RStudio - niveau II</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Douglass, Alex, Deon Roos, Francesca Mancini, Ana Couto, and David\nLusseau. 2022. An Introduction to r. https://alexd106.github.io/Rbook/.\n\n\nFogarty, Brian J. 2018. Quantitative Social Science Data with r: An\nIntroduction. Thousand Oaks, California: SAGE\nPublications, Inc. https://us.sagepub.com/en-us/nam/quantitative-social-science-data-with-r/book257236.\n\n\nGuitard, Dominic, and Sylvain Fiset. 2023. “Stat Checkers: Make\nReproducible Computer Code Mandatory.” Nature 616\n(7957): 433. https://doi.org/10.1038/d41586-023-01275-8.\n\n\nWickham, Hadley, and Garrett Grolemund. 2017. R for Data Science:\nImport, Tidy, Transform, Visualize, and Model Data. 1st edition.\nSebastopol, CA: O’Reilly Media. https://r4ds.had.co.nz/.\n\n\nXie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. R Markdown:\nThe Definitive Guide. New York: Chapman; Hall/CRC. https://doi.org/10.1201/9781138359444.\n\n\nXie, Yihui, Christophe Dervieux, and Emily Riederer. 2020. R\nMarkdown Cookbook. Boca Raton: Chapman; Hall/CRC. https://doi.org/10.1201/9781003097471.",
    "crumbs": [
      "References"
    ]
  }
]